#ifndef REP_CONFIGSHARE_REPLICA_H
#define REP_CONFIGSHARE_REPLICA_H

// This is an autogenerated file.
// Do not edit this file, any changes made will be lost the next time it is generated.

#include <QtCore/qobject.h>
#include <QtCore/qdatastream.h>
#include <QtCore/qvariant.h>
#include <QtCore/qmetatype.h>

#include <QtRemoteObjects/qremoteobjectnode.h>
#include <QtRemoteObjects/qremoteobjectpendingcall.h>
#include <QtRemoteObjects/qremoteobjectreplica.h>


class ConfigShareReplica : public QRemoteObjectReplica
{
    Q_OBJECT
    Q_CLASSINFO(QCLASSINFO_REMOTEOBJECT_TYPE, "ConfigShare")
    Q_CLASSINFO(QCLASSINFO_REMOTEOBJECT_SIGNATURE, "343ce699cfb1dd0a16f769bd667485e90f1d1897")

public:
    ConfigShareReplica() : QRemoteObjectReplica() { initialize(); }
    static void registerMetatypes()
    {
        static bool initialized = false;
        if (initialized)
            return;
        initialized = true;
    }

private:
    ConfigShareReplica(QRemoteObjectNode *node, const QString &name = QString())
        : QRemoteObjectReplica(ConstructWithNode)
    {
        initializeNode(node, name);
    }

    void initialize() override
    {
        ConfigShareReplica::registerMetatypes();
        QVariantList properties;
        properties.reserve(0);
        setProperties(properties);
    }

public:
    virtual ~ConfigShareReplica() {}


Q_SIGNALS:
    void ConfigChanged(QString name, QByteArray content);

public Q_SLOTS:
    QRemoteObjectPendingReply<QByteArray> getConfig(QString name)
    {
        static int __repc_index = ConfigShareReplica::staticMetaObject.indexOfSlot("getConfig(QString)");
        QVariantList __repc_args;
        __repc_args
            << QVariant::fromValue(name)
        ;
        return QRemoteObjectPendingReply<QByteArray>(sendWithReply(QMetaObject::InvokeMetaMethod, __repc_index, __repc_args));
    }

private:
    friend class QT_PREPEND_NAMESPACE(QRemoteObjectNode);
};

#if (QT_VERSION < QT_VERSION_CHECK(5, 5, 0))
#endif


QT_BEGIN_NAMESPACE
QT_END_NAMESPACE


#endif // REP_CONFIGSHARE_REPLICA_H
