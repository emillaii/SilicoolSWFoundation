//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : LogCollector.h
//  @ Date : 2020/1/7
//  @ Author :
//
//

#if !defined(LOGCOLLECTOR_H)
#define LOGCOLLECTOR_H

#include "../configManager/configarray.h"
#include "../zmqWrapper/subscriber.h"

class LogCollector
{
public:
    LogCollector();

    virtual ~LogCollector();

protected:
    void init(ConfigArray *addrToBeListened);

    virtual void onNewLog(const QString &category, int logLevel, const QString &msg) = 0;
    virtual void onMessage(const QJsonObject &jsonObj)
    {
        Q_UNUSED(jsonObj)
    }

private:
    void messageHandle(const QJsonObject &jsonObj)
    {
        if (jsonObj["msgName"] == "newLog")
        {
            onNewLog(jsonObj["category"].toString(), jsonObj["level"].toInt(), jsonObj["log"].toString());
        }
        else
        {
            onMessage(jsonObj);
        }
    }

protected:
    Subscriber logSubscriber;
    QString defaultCategoryName;
};

#endif    // LOGCOLLECTOR_H
